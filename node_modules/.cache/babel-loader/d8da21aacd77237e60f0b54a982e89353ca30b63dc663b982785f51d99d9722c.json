{"ast":null,"code":"var _jsxFileName = \"D:\\\\restaurantPOS\\\\src\\\\contexts\\\\SaleContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  currentSale: null,\n  loading: false,\n  error: null\n};\nfunction saleReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_SALE\":\n      {\n        const {\n          customerId,\n          customer\n        } = action.payload;\n        const newSale = {\n          id: uuidv4(),\n          customerId,\n          customer,\n          cashierId: \"\",\n          // Will be set from auth context\n          cashier: {},\n          // Will be set from auth context\n          items: [],\n          status: \"draft\",\n          subtotal: 0,\n          tax: 0,\n          discount: 0,\n          total: 0,\n          paymentMethod: \"cash\",\n          createdAt: new Date(),\n          updatedAt: new Date()\n        };\n        return {\n          ...state,\n          currentSale: newSale,\n          error: null\n        };\n      }\n    case \"ADD_ITEM\":\n      {\n        if (!state.currentSale) return state;\n        const {\n          product,\n          quantity,\n          discount = 0\n        } = action.payload;\n        const existingItemIndex = state.currentSale.items.findIndex(item => item.productId === product.id);\n        let updatedItems;\n        if (existingItemIndex >= 0) {\n          // Update existing item quantity\n          updatedItems = state.currentSale.items.map((item, index) => {\n            if (index === existingItemIndex) {\n              const newQuantity = item.quantity + quantity;\n              return {\n                ...item,\n                quantity: newQuantity,\n                totalPrice: (item.unitPrice - (item.discount || 0)) * newQuantity\n              };\n            }\n            return item;\n          });\n        } else {\n          // Add new item\n          const newItem = {\n            id: uuidv4(),\n            productId: product.id,\n            product,\n            quantity,\n            unitPrice: product.price,\n            discount,\n            totalPrice: (product.price - discount) * quantity\n          };\n          updatedItems = [...state.currentSale.items, newItem];\n        }\n        const subtotal = updatedItems.reduce((sum, item) => sum + item.totalPrice, 0);\n        const tax = subtotal * 0.18; // 18% GST\n        const total = subtotal + tax;\n        return {\n          ...state,\n          currentSale: {\n            ...state.currentSale,\n            items: updatedItems,\n            subtotal,\n            tax,\n            total,\n            updatedAt: new Date()\n          }\n        };\n      }\n    case \"REMOVE_ITEM\":\n      {\n        if (!state.currentSale) return state;\n        const updatedItems = state.currentSale.items.filter(item => item.id !== action.payload);\n        const subtotal = updatedItems.reduce((sum, item) => sum + item.totalPrice, 0);\n        const tax = subtotal * 0.18;\n        const total = subtotal + tax;\n        return {\n          ...state,\n          currentSale: {\n            ...state.currentSale,\n            items: updatedItems,\n            subtotal,\n            tax,\n            total,\n            updatedAt: new Date()\n          }\n        };\n      }\n    case \"UPDATE_QUANTITY\":\n      {\n        if (!state.currentSale) return state;\n        const {\n          saleItemId,\n          quantity\n        } = action.payload;\n        if (quantity <= 0) {\n          // Remove item if quantity is 0 or negative\n          return saleReducer(state, {\n            type: \"REMOVE_ITEM\",\n            payload: saleItemId\n          });\n        }\n        const updatedItems = state.currentSale.items.map(item => {\n          if (item.id === saleItemId) {\n            return {\n              ...item,\n              quantity,\n              totalPrice: (item.unitPrice - (item.discount || 0)) * quantity\n            };\n          }\n          return item;\n        });\n        const subtotal = updatedItems.reduce((sum, item) => sum + item.totalPrice, 0);\n        const tax = subtotal * 0.18;\n        const total = subtotal + tax;\n        return {\n          ...state,\n          currentSale: {\n            ...state.currentSale,\n            items: updatedItems,\n            subtotal,\n            tax,\n            total,\n            updatedAt: new Date()\n          }\n        };\n      }\n    case \"UPDATE_DISCOUNT\":\n      {\n        if (!state.currentSale) return state;\n        const {\n          saleItemId,\n          discount\n        } = action.payload;\n        const updatedItems = state.currentSale.items.map(item => {\n          if (item.id === saleItemId) {\n            return {\n              ...item,\n              discount,\n              totalPrice: (item.unitPrice - discount) * item.quantity\n            };\n          }\n          return item;\n        });\n        const subtotal = updatedItems.reduce((sum, item) => sum + item.totalPrice, 0);\n        const tax = subtotal * 0.18;\n        const total = subtotal + tax;\n        return {\n          ...state,\n          currentSale: {\n            ...state.currentSale,\n            items: updatedItems,\n            subtotal,\n            tax,\n            total,\n            updatedAt: new Date()\n          }\n        };\n      }\n    case \"COMPLETE_SALE_START\":\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case \"COMPLETE_SALE_SUCCESS\":\n      return {\n        ...state,\n        currentSale: null,\n        loading: false,\n        error: null\n      };\n    case \"COMPLETE_SALE_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case \"CANCEL_SALE\":\n      return {\n        ...state,\n        currentSale: null,\n        error: null\n      };\n    case \"CLEAR_ERROR\":\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\nconst SaleContext = /*#__PURE__*/createContext(undefined);\nexport function SaleProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(saleReducer, initialState);\n  const {\n    user\n  } = useAuth();\n  const createSale = customerId => {\n    const customer = customerId ? mockCustomers.find(c => c.id === customerId) : undefined;\n    dispatch({\n      type: \"CREATE_SALE\",\n      payload: {\n        customerId,\n        customer\n      }\n    });\n  };\n  const addItemToSale = (product, quantity, discount) => {\n    if (!product.isAvailable) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Product is not available\"\n      });\n      return;\n    }\n    if (product.stockQuantity < quantity) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Insufficient stock\"\n      });\n      return;\n    }\n    dispatch({\n      type: \"ADD_ITEM\",\n      payload: {\n        product,\n        quantity,\n        discount\n      }\n    });\n  };\n  const removeItemFromSale = saleItemId => {\n    dispatch({\n      type: \"REMOVE_ITEM\",\n      payload: saleItemId\n    });\n  };\n  const updateItemQuantity = (saleItemId, quantity) => {\n    dispatch({\n      type: \"UPDATE_QUANTITY\",\n      payload: {\n        saleItemId,\n        quantity\n      }\n    });\n  };\n  const updateItemDiscount = (saleItemId, discount) => {\n    dispatch({\n      type: \"UPDATE_DISCOUNT\",\n      payload: {\n        saleItemId,\n        discount\n      }\n    });\n  };\n  const completeSale = async paymentMethod => {\n    if (!state.currentSale || !user) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"No active sale or user\"\n      });\n      return;\n    }\n    if (state.currentSale.items.length === 0) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Cannot complete sale with no items\"\n      });\n      return;\n    }\n    dispatch({\n      type: \"COMPLETE_SALE_START\"\n    });\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const completedSale = {\n        ...state.currentSale,\n        cashierId: user.id,\n        cashier: user,\n        status: \"completed\",\n        paymentMethod,\n        completedAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      // Store in localStorage for offline support\n      const existingSales = JSON.parse(localStorage.getItem(\"sales\") || \"[]\");\n      existingSales.push(completedSale);\n      localStorage.setItem(\"sales\", JSON.stringify(existingSales));\n\n      // Update product stock\n      state.currentSale.items.forEach(item => {\n        const product = item.product;\n        product.stockQuantity -= item.quantity;\n        // Update product in localStorage or send to API\n      });\n      dispatch({\n        type: \"COMPLETE_SALE_SUCCESS\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Failed to complete sale\"\n      });\n    }\n  };\n  const cancelSale = () => {\n    dispatch({\n      type: \"CANCEL_SALE\"\n    });\n  };\n  const calculateTotal = () => {\n    var _state$currentSale;\n    return ((_state$currentSale = state.currentSale) === null || _state$currentSale === void 0 ? void 0 : _state$currentSale.total) || 0;\n  };\n  const scanBarcode = async barcode => {\n    try {\n      // Simulate barcode scanning - in real app, this would call an API\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const product = mockProducts.find(p => p.barcode === barcode);\n      return product || null;\n    } catch (error) {\n      console.error(\"Barcode scan failed:\", error);\n      return null;\n    }\n  };\n  const value = {\n    currentSale: state.currentSale,\n    createSale,\n    addItemToSale,\n    removeItemFromSale,\n    updateItemQuantity,\n    updateItemDiscount,\n    completeSale,\n    cancelSale,\n    calculateTotal,\n    scanBarcode\n  };\n  return /*#__PURE__*/_jsxDEV(SaleContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 10\n  }, this);\n}\n_s(SaleProvider, \"UbE+bRyfFCD9l1K5wDm8aGzkdAE=\", false, function () {\n  return [useAuth];\n});\n_c = SaleProvider;\nexport function useSale() {\n  _s2();\n  const context = useContext(SaleContext);\n  if (context === undefined) {\n    throw new Error(\"useSale must be used within a SaleProvider\");\n  }\n  return context;\n}\n_s2(useSale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { SaleContext };\n\n// Mock data for development\nconst mockProducts = [{\n  id: \"1\",\n  name: \"iPhone 15 Pro\",\n  description: \"Latest iPhone with A17 Pro chip\",\n  price: 999,\n  category: \"smartphones\",\n  brand: \"Apple\",\n  model: \"iPhone 15 Pro\",\n  barcode: \"1234567890123\",\n  sku: \"APL-IP15P-128\",\n  isAvailable: true,\n  stockQuantity: 25,\n  minStockLevel: 5,\n  warranty: 12,\n  specifications: {\n    Storage: \"128GB\",\n    Color: \"Natural Titanium\",\n    Display: \"6.1-inch Super Retina XDR\"\n  },\n  createdAt: new Date(),\n  updatedAt: new Date()\n}, {\n  id: \"2\",\n  name: \"Samsung Galaxy S24\",\n  description: \"Flagship Android smartphone\",\n  price: 799,\n  category: \"smartphones\",\n  brand: \"Samsung\",\n  model: \"Galaxy S24\",\n  barcode: \"2345678901234\",\n  sku: \"SAM-GS24-256\",\n  isAvailable: true,\n  stockQuantity: 15,\n  minStockLevel: 3,\n  warranty: 12,\n  specifications: {\n    Storage: \"256GB\",\n    Color: \"Phantom Black\",\n    Display: \"6.2-inch Dynamic AMOLED\"\n  },\n  createdAt: new Date(),\n  updatedAt: new Date()\n}];\nconst mockCustomers = [{\n  id: \"1\",\n  name: \"John Doe\",\n  phone: \"+1234567890\",\n  email: \"john@example.com\",\n  address: \"123 Main St, City\",\n  createdAt: new Date(),\n  totalPurchases: 2500,\n  lastVisit: new Date()\n}, {\n  id: \"2\",\n  name: \"Jane Smith\",\n  phone: \"+1987654321\",\n  email: \"jane@example.com\",\n  createdAt: new Date(),\n  totalPurchases: 1200,\n  lastVisit: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) // 7 days ago\n}];\nvar _c;\n$RefreshReg$(_c, \"SaleProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useAuth","v4","uuidv4","jsxDEV","_jsxDEV","initialState","currentSale","loading","error","saleReducer","state","action","type","customerId","customer","payload","newSale","id","cashierId","cashier","items","status","subtotal","tax","discount","total","paymentMethod","createdAt","Date","updatedAt","product","quantity","existingItemIndex","findIndex","item","productId","updatedItems","map","index","newQuantity","totalPrice","unitPrice","newItem","price","reduce","sum","filter","saleItemId","SaleContext","undefined","SaleProvider","children","_s","dispatch","user","createSale","mockCustomers","find","c","addItemToSale","isAvailable","stockQuantity","removeItemFromSale","updateItemQuantity","updateItemDiscount","completeSale","length","Promise","resolve","setTimeout","completedSale","completedAt","existingSales","JSON","parse","localStorage","getItem","push","setItem","stringify","forEach","cancelSale","calculateTotal","_state$currentSale","scanBarcode","barcode","mockProducts","p","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSale","_s2","context","Error","name","description","category","brand","model","sku","minStockLevel","warranty","specifications","Storage","Color","Display","phone","email","address","totalPurchases","lastVisit","now","$RefreshReg$"],"sources":["D:/restaurantPOS/src/contexts/SaleContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from \"react\";\nimport { Sale, SaleItem, Product, Customer, SaleContextType } from \"../types\";\nimport { useAuth } from \"./AuthContext\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface SaleState {\n  currentSale: Sale | null;\n  loading: boolean;\n  error: string | null;\n}\n\ntype SaleAction =\n  | {\n      type: \"CREATE_SALE\";\n      payload: { customerId?: string; customer?: Customer };\n    }\n  | {\n      type: \"ADD_ITEM\";\n      payload: { product: Product; quantity: number; discount?: number };\n    }\n  | { type: \"REMOVE_ITEM\"; payload: string }\n  | {\n      type: \"UPDATE_QUANTITY\";\n      payload: { saleItemId: string; quantity: number };\n    }\n  | {\n      type: \"UPDATE_DISCOUNT\";\n      payload: { saleItemId: string; discount: number };\n    }\n  | { type: \"COMPLETE_SALE_START\" }\n  | { type: \"COMPLETE_SALE_SUCCESS\" }\n  | { type: \"COMPLETE_SALE_FAILURE\"; payload: string }\n  | { type: \"CANCEL_SALE\" }\n  | { type: \"CLEAR_ERROR\" };\n\nconst initialState: SaleState = {\n  currentSale: null,\n  loading: false,\n  error: null,\n};\n\nfunction saleReducer(state: SaleState, action: SaleAction): SaleState {\n  switch (action.type) {\n    case \"CREATE_SALE\": {\n      const { customerId, customer } = action.payload;\n      const newSale: Sale = {\n        id: uuidv4(),\n        customerId,\n        customer,\n        cashierId: \"\", // Will be set from auth context\n        cashier: {} as any, // Will be set from auth context\n        items: [],\n        status: \"draft\",\n        subtotal: 0,\n        tax: 0,\n        discount: 0,\n        total: 0,\n        paymentMethod: \"cash\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      return {\n        ...state,\n        currentSale: newSale,\n        error: null,\n      };\n    }\n\n    case \"ADD_ITEM\": {\n      if (!state.currentSale) return state;\n\n      const { product, quantity, discount = 0 } = action.payload;\n      const existingItemIndex = state.currentSale.items.findIndex(\n        (item) => item.productId === product.id\n      );\n\n      let updatedItems: SaleItem[];\n\n      if (existingItemIndex >= 0) {\n        // Update existing item quantity\n        updatedItems = state.currentSale.items.map((item, index) => {\n          if (index === existingItemIndex) {\n            const newQuantity = item.quantity + quantity;\n            return {\n              ...item,\n              quantity: newQuantity,\n              totalPrice: (item.unitPrice - (item.discount || 0)) * newQuantity,\n            };\n          }\n          return item;\n        });\n      } else {\n        // Add new item\n        const newItem: SaleItem = {\n          id: uuidv4(),\n          productId: product.id,\n          product,\n          quantity,\n          unitPrice: product.price,\n          discount,\n          totalPrice: (product.price - discount) * quantity,\n        };\n        updatedItems = [...state.currentSale.items, newItem];\n      }\n\n      const subtotal = updatedItems.reduce(\n        (sum, item) => sum + item.totalPrice,\n        0\n      );\n      const tax = subtotal * 0.18; // 18% GST\n      const total = subtotal + tax;\n\n      return {\n        ...state,\n        currentSale: {\n          ...state.currentSale,\n          items: updatedItems,\n          subtotal,\n          tax,\n          total,\n          updatedAt: new Date(),\n        },\n      };\n    }\n\n    case \"REMOVE_ITEM\": {\n      if (!state.currentSale) return state;\n\n      const updatedItems = state.currentSale.items.filter(\n        (item) => item.id !== action.payload\n      );\n\n      const subtotal = updatedItems.reduce(\n        (sum, item) => sum + item.totalPrice,\n        0\n      );\n      const tax = subtotal * 0.18;\n      const total = subtotal + tax;\n\n      return {\n        ...state,\n        currentSale: {\n          ...state.currentSale,\n          items: updatedItems,\n          subtotal,\n          tax,\n          total,\n          updatedAt: new Date(),\n        },\n      };\n    }\n\n    case \"UPDATE_QUANTITY\": {\n      if (!state.currentSale) return state;\n\n      const { saleItemId, quantity } = action.payload;\n\n      if (quantity <= 0) {\n        // Remove item if quantity is 0 or negative\n        return saleReducer(state, { type: \"REMOVE_ITEM\", payload: saleItemId });\n      }\n\n      const updatedItems = state.currentSale.items.map((item) => {\n        if (item.id === saleItemId) {\n          return {\n            ...item,\n            quantity,\n            totalPrice: (item.unitPrice - (item.discount || 0)) * quantity,\n          };\n        }\n        return item;\n      });\n\n      const subtotal = updatedItems.reduce(\n        (sum, item) => sum + item.totalPrice,\n        0\n      );\n      const tax = subtotal * 0.18;\n      const total = subtotal + tax;\n\n      return {\n        ...state,\n        currentSale: {\n          ...state.currentSale,\n          items: updatedItems,\n          subtotal,\n          tax,\n          total,\n          updatedAt: new Date(),\n        },\n      };\n    }\n\n    case \"UPDATE_DISCOUNT\": {\n      if (!state.currentSale) return state;\n\n      const { saleItemId, discount } = action.payload;\n      const updatedItems = state.currentSale.items.map((item) => {\n        if (item.id === saleItemId) {\n          return {\n            ...item,\n            discount,\n            totalPrice: (item.unitPrice - discount) * item.quantity,\n          };\n        }\n        return item;\n      });\n\n      const subtotal = updatedItems.reduce(\n        (sum, item) => sum + item.totalPrice,\n        0\n      );\n      const tax = subtotal * 0.18;\n      const total = subtotal + tax;\n\n      return {\n        ...state,\n        currentSale: {\n          ...state.currentSale,\n          items: updatedItems,\n          subtotal,\n          tax,\n          total,\n          updatedAt: new Date(),\n        },\n      };\n    }\n\n    case \"COMPLETE_SALE_START\":\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case \"COMPLETE_SALE_SUCCESS\":\n      return {\n        ...state,\n        currentSale: null,\n        loading: false,\n        error: null,\n      };\n\n    case \"COMPLETE_SALE_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    case \"CANCEL_SALE\":\n      return {\n        ...state,\n        currentSale: null,\n        error: null,\n      };\n\n    case \"CLEAR_ERROR\":\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst SaleContext = createContext<SaleContextType | undefined>(undefined);\n\nexport function SaleProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(saleReducer, initialState);\n  const { user } = useAuth();\n\n  const createSale = (customerId?: string) => {\n    const customer = customerId\n      ? mockCustomers.find((c) => c.id === customerId)\n      : undefined;\n    dispatch({ type: \"CREATE_SALE\", payload: { customerId, customer } });\n  };\n\n  const addItemToSale = (\n    product: Product,\n    quantity: number,\n    discount?: number\n  ) => {\n    if (!product.isAvailable) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Product is not available\",\n      });\n      return;\n    }\n\n    if (product.stockQuantity < quantity) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Insufficient stock\",\n      });\n      return;\n    }\n\n    dispatch({ type: \"ADD_ITEM\", payload: { product, quantity, discount } });\n  };\n\n  const removeItemFromSale = (saleItemId: string) => {\n    dispatch({ type: \"REMOVE_ITEM\", payload: saleItemId });\n  };\n\n  const updateItemQuantity = (saleItemId: string, quantity: number) => {\n    dispatch({ type: \"UPDATE_QUANTITY\", payload: { saleItemId, quantity } });\n  };\n\n  const updateItemDiscount = (saleItemId: string, discount: number) => {\n    dispatch({ type: \"UPDATE_DISCOUNT\", payload: { saleItemId, discount } });\n  };\n\n  const completeSale = async (\n    paymentMethod: \"cash\" | \"card\" | \"upi\" | \"bank_transfer\"\n  ) => {\n    if (!state.currentSale || !user) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"No active sale or user\",\n      });\n      return;\n    }\n\n    if (state.currentSale.items.length === 0) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Cannot complete sale with no items\",\n      });\n      return;\n    }\n\n    dispatch({ type: \"COMPLETE_SALE_START\" });\n\n    try {\n      // Simulate API call\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      const completedSale: Sale = {\n        ...state.currentSale,\n        cashierId: user.id,\n        cashier: user,\n        status: \"completed\",\n        paymentMethod,\n        completedAt: new Date(),\n        updatedAt: new Date(),\n      };\n\n      // Store in localStorage for offline support\n      const existingSales = JSON.parse(localStorage.getItem(\"sales\") || \"[]\");\n      existingSales.push(completedSale);\n      localStorage.setItem(\"sales\", JSON.stringify(existingSales));\n\n      // Update product stock\n      state.currentSale.items.forEach((item) => {\n        const product = item.product;\n        product.stockQuantity -= item.quantity;\n        // Update product in localStorage or send to API\n      });\n\n      dispatch({ type: \"COMPLETE_SALE_SUCCESS\" });\n    } catch (error) {\n      dispatch({\n        type: \"COMPLETE_SALE_FAILURE\",\n        payload: \"Failed to complete sale\",\n      });\n    }\n  };\n\n  const cancelSale = () => {\n    dispatch({ type: \"CANCEL_SALE\" });\n  };\n\n  const calculateTotal = (): number => {\n    return state.currentSale?.total || 0;\n  };\n\n  const scanBarcode = async (barcode: string): Promise<Product | null> => {\n    try {\n      // Simulate barcode scanning - in real app, this would call an API\n      await new Promise((resolve) => setTimeout(resolve, 500));\n\n      const product = mockProducts.find((p) => p.barcode === barcode);\n      return product || null;\n    } catch (error) {\n      console.error(\"Barcode scan failed:\", error);\n      return null;\n    }\n  };\n\n  const value: SaleContextType = {\n    currentSale: state.currentSale,\n    createSale,\n    addItemToSale,\n    removeItemFromSale,\n    updateItemQuantity,\n    updateItemDiscount,\n    completeSale,\n    cancelSale,\n    calculateTotal,\n    scanBarcode,\n  };\n\n  return <SaleContext.Provider value={value}>{children}</SaleContext.Provider>;\n}\n\nexport function useSale(): SaleContextType {\n  const context = useContext(SaleContext);\n  if (context === undefined) {\n    throw new Error(\"useSale must be used within a SaleProvider\");\n  }\n  return context;\n}\n\nexport { SaleContext };\n\n// Mock data for development\nconst mockProducts: Product[] = [\n  {\n    id: \"1\",\n    name: \"iPhone 15 Pro\",\n    description: \"Latest iPhone with A17 Pro chip\",\n    price: 999,\n    category: \"smartphones\",\n    brand: \"Apple\",\n    model: \"iPhone 15 Pro\",\n    barcode: \"1234567890123\",\n    sku: \"APL-IP15P-128\",\n    isAvailable: true,\n    stockQuantity: 25,\n    minStockLevel: 5,\n    warranty: 12,\n    specifications: {\n      Storage: \"128GB\",\n      Color: \"Natural Titanium\",\n      Display: \"6.1-inch Super Retina XDR\",\n    },\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n  {\n    id: \"2\",\n    name: \"Samsung Galaxy S24\",\n    description: \"Flagship Android smartphone\",\n    price: 799,\n    category: \"smartphones\",\n    brand: \"Samsung\",\n    model: \"Galaxy S24\",\n    barcode: \"2345678901234\",\n    sku: \"SAM-GS24-256\",\n    isAvailable: true,\n    stockQuantity: 15,\n    minStockLevel: 3,\n    warranty: 12,\n    specifications: {\n      Storage: \"256GB\",\n      Color: \"Phantom Black\",\n      Display: \"6.2-inch Dynamic AMOLED\",\n    },\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  },\n];\n\nconst mockCustomers: Customer[] = [\n  {\n    id: \"1\",\n    name: \"John Doe\",\n    phone: \"+1234567890\",\n    email: \"john@example.com\",\n    address: \"123 Main St, City\",\n    createdAt: new Date(),\n    totalPurchases: 2500,\n    lastVisit: new Date(),\n  },\n  {\n    id: \"2\",\n    name: \"Jane Smith\",\n    phone: \"+1987654321\",\n    email: \"jane@example.com\",\n    createdAt: new Date(),\n    totalPurchases: 1200,\n    lastVisit: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 days ago\n  },\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}