{"ast":null,"code":"import React,{createContext,useContext,useReducer}from'react';import{v4 as uuidv4}from'uuid';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={notifications:[]};function notificationReducer(state,action){switch(action.type){case'ADD_NOTIFICATION':{const notification={...action.payload,id:uuidv4(),createdAt:new Date()};return{...state,notifications:[...state.notifications,notification]};}case'REMOVE_NOTIFICATION':return{...state,notifications:state.notifications.filter(n=>n.id!==action.payload)};case'CLEAR_NOTIFICATIONS':return{...state,notifications:[]};default:return state;}}const NotificationContext=/*#__PURE__*/createContext(undefined);export function NotificationProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(notificationReducer,initialState);const addNotification=notification=>{const newNotification={...notification,id:uuidv4(),createdAt:new Date()};dispatch({type:'ADD_NOTIFICATION',payload:notification});// Auto-remove notification after duration (default 5 seconds)\nconst duration=notification.duration||5000;if(duration>0){setTimeout(()=>{dispatch({type:'REMOVE_NOTIFICATION',payload:newNotification.id});},duration);}};const removeNotification=id=>{dispatch({type:'REMOVE_NOTIFICATION',payload:id});};const clearNotifications=()=>{dispatch({type:'CLEAR_NOTIFICATIONS'});};const value={notifications:state.notifications,addNotification,removeNotification,clearNotifications};return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:value,children:children});}export function useNotification(){const context=useContext(NotificationContext);if(context===undefined){throw new Error('useNotification must be used within a NotificationProvider');}return context;}export{NotificationContext};","map":{"version":3,"names":["React","createContext","useContext","useReducer","v4","uuidv4","jsx","_jsx","initialState","notifications","notificationReducer","state","action","type","notification","payload","id","createdAt","Date","filter","n","NotificationContext","undefined","NotificationProvider","_ref","children","dispatch","addNotification","newNotification","duration","setTimeout","removeNotification","clearNotifications","value","Provider","useNotification","context","Error"],"sources":["D:/restaurantPOS/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { Notification, NotificationContextType } from '../types';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface NotificationState {\n  notifications: Notification[];\n}\n\ntype NotificationAction =\n  | { type: 'ADD_NOTIFICATION'; payload: Omit<Notification, 'id' | 'createdAt'> }\n  | { type: 'REMOVE_NOTIFICATION'; payload: string }\n  | { type: 'CLEAR_NOTIFICATIONS' };\n\nconst initialState: NotificationState = {\n  notifications: [],\n};\n\nfunction notificationReducer(state: NotificationState, action: NotificationAction): NotificationState {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION': {\n      const notification: Notification = {\n        ...action.payload,\n        id: uuidv4(),\n        createdAt: new Date(),\n      };\n      return {\n        ...state,\n        notifications: [...state.notifications, notification],\n      };\n    }\n    \n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload),\n      };\n    \n    case 'CLEAR_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: [],\n      };\n    \n    default:\n      return state;\n  }\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport function NotificationProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n\n  const addNotification = (notification: Omit<Notification, 'id' | 'createdAt'>): void => {\n    const newNotification: Notification = {\n      ...notification,\n      id: uuidv4(),\n      createdAt: new Date(),\n    };\n    \n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // Auto-remove notification after duration (default 5 seconds)\n    const duration = notification.duration || 5000;\n    if (duration > 0) {\n      setTimeout(() => {\n        dispatch({ type: 'REMOVE_NOTIFICATION', payload: newNotification.id });\n      }, duration);\n    }\n  };\n\n  const removeNotification = (id: string): void => {\n    dispatch({ type: 'REMOVE_NOTIFICATION', payload: id });\n  };\n\n  const clearNotifications = (): void => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  };\n\n  const value: NotificationContextType = {\n    notifications: state.notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function useNotification(): NotificationContextType {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n}\n\nexport { NotificationContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}