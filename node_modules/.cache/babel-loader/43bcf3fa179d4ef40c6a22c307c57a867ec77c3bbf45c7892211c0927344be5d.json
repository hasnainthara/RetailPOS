{"ast":null,"code":"var _jsxFileName = \"D:\\\\restaurantPOS\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n}\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Mock users for demo purposes\nconst mockUsers = [{\n  id: '1',\n  name: 'Admin User',\n  email: 'admin@restaurant.com',\n  role: 'admin',\n  isActive: true,\n  createdAt: new Date()\n}, {\n  id: '2',\n  name: 'John Waiter',\n  email: 'waiter@restaurant.com',\n  role: 'waiter',\n  isActive: true,\n  createdAt: new Date()\n}];\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    // Check for stored user session\n    const storedUser = localStorage.getItem('pos_user');\n    if (storedUser) {\n      try {\n        const user = JSON.parse(storedUser);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: user\n        });\n      } catch (error) {\n        localStorage.removeItem('pos_user');\n      }\n    }\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock authentication - in real app, this would be an API call\n      const user = mockUsers.find(u => u.email === email);\n      if (!user) {\n        throw new Error('Invalid email or password');\n      }\n\n      // Mock password validation (in real app, this would be handled by backend)\n      const validPasswords = {\n        'admin@restaurant.com': 'admin123',\n        'waiter@restaurant.com': 'waiter123'\n      };\n      if (validPasswords[email] !== password) {\n        throw new Error('Invalid email or password');\n      }\n\n      // Store user session\n      localStorage.setItem('pos_user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: user\n      });\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error instanceof Error ? error.message : 'Login failed'\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('pos_user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const value = {\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","error","authReducer","state","action","type","payload","AuthContext","undefined","mockUsers","id","name","email","role","isActive","createdAt","Date","AuthProvider","children","_s","dispatch","storedUser","localStorage","getItem","JSON","parse","removeItem","login","password","Promise","resolve","setTimeout","find","u","Error","validPasswords","setItem","stringify","message","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/restaurantPOS/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\nimport { User, AuthContextType } from '../types';\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'LOGIN_START' }\n  | { type: 'LOGIN_SUCCESS'; payload: User }\n  | { type: 'LOGIN_FAILURE'; payload: string }\n  | { type: 'LOGOUT' }\n  | { type: 'CLEAR_ERROR' };\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n};\n\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n        error: null,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Mock users for demo purposes\nconst mockUsers: User[] = [\n  {\n    id: '1',\n    name: 'Admin User',\n    email: 'admin@restaurant.com',\n    role: 'admin',\n    isActive: true,\n    createdAt: new Date(),\n  },\n  {\n    id: '2',\n    name: 'John Waiter',\n    email: 'waiter@restaurant.com',\n    role: 'waiter',\n    isActive: true,\n    createdAt: new Date(),\n  },\n];\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    // Check for stored user session\n    const storedUser = localStorage.getItem('pos_user');\n    if (storedUser) {\n      try {\n        const user = JSON.parse(storedUser);\n        dispatch({ type: 'LOGIN_SUCCESS', payload: user });\n      } catch (error) {\n        localStorage.removeItem('pos_user');\n      }\n    }\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    dispatch({ type: 'LOGIN_START' });\n\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock authentication - in real app, this would be an API call\n      const user = mockUsers.find(u => u.email === email);\n      \n      if (!user) {\n        throw new Error('Invalid email or password');\n      }\n\n      // Mock password validation (in real app, this would be handled by backend)\n      const validPasswords: { [key: string]: string } = {\n        'admin@restaurant.com': 'admin123',\n        'waiter@restaurant.com': 'waiter123',\n      };\n\n      if (validPasswords[email] !== password) {\n        throw new Error('Invalid email or password');\n      }\n\n      // Store user session\n      localStorage.setItem('pos_user', JSON.stringify(user));\n      dispatch({ type: 'LOGIN_SUCCESS', payload: user });\n    } catch (error) {\n      dispatch({ \n        type: 'LOGIN_FAILURE', \n        payload: error instanceof Error ? error.message : 'Login failed' \n      });\n      throw error;\n    }\n  };\n\n  const logout = (): void => {\n    localStorage.removeItem('pos_user');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const value: AuthContextType = {\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    login,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth(): AuthContextType {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nexport { AuthContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}