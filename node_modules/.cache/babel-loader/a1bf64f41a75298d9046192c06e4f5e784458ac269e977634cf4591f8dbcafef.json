{"ast":null,"code":"var _jsxFileName = \"D:\\\\restaurantPOS\\\\src\\\\contexts\\\\NotificationContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  notifications: []\n};\nfunction notificationReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      {\n        const notification = {\n          ...action.payload,\n          id: uuidv4(),\n          createdAt: new Date()\n        };\n        return {\n          ...state,\n          notifications: [...state.notifications, notification]\n        };\n      }\n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    case 'CLEAR_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: []\n      };\n    default:\n      return state;\n  }\n}\nconst NotificationContext = /*#__PURE__*/createContext(undefined);\nexport function NotificationProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n  const addNotification = notification => {\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      payload: notification\n    });\n\n    // Auto-remove notification after duration (default 5 seconds)\n    const duration = notification.duration || 5000;\n    if (duration > 0) {\n      setTimeout(() => {\n        dispatch({\n          type: 'REMOVE_NOTIFICATION',\n          payload: notification.id || ''\n        });\n      }, duration);\n    }\n  };\n  const removeNotification = id => {\n    dispatch({\n      type: 'REMOVE_NOTIFICATION',\n      payload: id\n    });\n  };\n  const clearNotifications = () => {\n    dispatch({\n      type: 'CLEAR_NOTIFICATIONS'\n    });\n  };\n  const value = {\n    notifications: state.notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = NotificationProvider;\nexport function useNotification() {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n}\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { NotificationContext };\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","v4","uuidv4","jsxDEV","_jsxDEV","initialState","notifications","notificationReducer","state","action","type","notification","payload","id","createdAt","Date","filter","n","NotificationContext","undefined","NotificationProvider","children","_s","dispatch","addNotification","duration","setTimeout","removeNotification","clearNotifications","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["D:/restaurantPOS/src/contexts/NotificationContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { Notification, NotificationContextType } from '../types';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface NotificationState {\n  notifications: Notification[];\n}\n\ntype NotificationAction =\n  | { type: 'ADD_NOTIFICATION'; payload: Omit<Notification, 'id' | 'createdAt'> }\n  | { type: 'REMOVE_NOTIFICATION'; payload: string }\n  | { type: 'CLEAR_NOTIFICATIONS' };\n\nconst initialState: NotificationState = {\n  notifications: [],\n};\n\nfunction notificationReducer(state: NotificationState, action: NotificationAction): NotificationState {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION': {\n      const notification: Notification = {\n        ...action.payload,\n        id: uuidv4(),\n        createdAt: new Date(),\n      };\n      return {\n        ...state,\n        notifications: [...state.notifications, notification],\n      };\n    }\n    \n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload),\n      };\n    \n    case 'CLEAR_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: [],\n      };\n    \n    default:\n      return state;\n  }\n}\n\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\nexport function NotificationProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n\n  const addNotification = (notification: Omit<Notification, 'id' | 'createdAt'>): void => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // Auto-remove notification after duration (default 5 seconds)\n    const duration = notification.duration || 5000;\n    if (duration > 0) {\n      setTimeout(() => {\n        dispatch({ type: 'REMOVE_NOTIFICATION', payload: notification.id || '' });\n      }, duration);\n    }\n  };\n\n  const removeNotification = (id: string): void => {\n    dispatch({ type: 'REMOVE_NOTIFICATION', payload: id });\n  };\n\n  const clearNotifications = (): void => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  };\n\n  const value: NotificationContextType = {\n    notifications: state.notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications,\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport function useNotification(): NotificationContextType {\n  const context = useContext(NotificationContext);\n  if (context === undefined) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n}\n\nexport { NotificationContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}